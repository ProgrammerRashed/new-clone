!(function (t) {
  "use strict";
  function e() {
    return (
      window.navigator.userAgent.indexOf("MSIE ") > 0 ||
      !!navigator.userAgent.match(/Trident.*rv\:11\./)
    );
  }
  function a() {
    return "-" + Math.random().toString(36).substr(2, 9);
  }
  function i() {
    var t = "vc_editable",
      e = window.location.href;
    return -1 !== e.indexOf("?" + t + "=") || -1 !== e.indexOf("&" + t + "=");
  }
  function n(e, a) {
    a
      ? t(e.target).removeClass("outView").addClass("inView")
      : t(e.target).removeClass("inView").addClass("outView");
  }
  var o = lozad(".ut-lazy", {
      rootMargin: "100%",
      loaded: function (e) {
        var a = t(e);
        a.delay(600).queue(function () {
          a.addClass("ut-image-loaded"),
            a.siblings(".ut-box-shadow-lazy").addClass("ut-box-shadow-ready"),
            a.closest(".ut-image-gallery-item").addClass("ut-image-loaded"),
            a
              .closest(".ut-animate-image")
              .addClass("ut-animate-image-ready")
              .trigger("inview", _isElementInViewport(a)),
            t.force_appear();
        });
      },
    }),
    l = lozad(".ut-lozad", { rootMargin: "100%" }),
    s = lozad(".ut-background-lozad", {
      rootMargin: "100%",
      load: function (e) {
        !t(e).hasClass("ut-pseudo-background") &&
        e.getAttribute("data-background-image")
          ? (e.style.backgroundImage =
              "url('" +
              e
                .getAttribute("data-background-image")
                .split(",")
                .join("'),url('") +
              "')")
          : t(e).hasClass("ut-pseudo-background") &&
            e.getAttribute("data-background-image") &&
            e.classList.add("ut-pseudo-background-loaded");
      },
    });
  function r(e, a) {
    var i = 0;
    return (
      e.each(function () {
        t(this).hasClass(a) && i++;
      }),
      i
    );
  }
  t(window).on("load", function () {
    o.observe(), l.observe(), s.observe();
  }),
    i() &&
      setInterval(function () {
        t.force_appear();
      }, 100);
  var u = {
    "effect-1": {
      scale: [0.3, 1],
      opacity: [0, 1],
      translateZ: 0,
      easing: "easeOutExpo",
      duration: 600,
      delay: function (t, e) {
        return 70 * (e + 1);
      },
    },
    "effect-2": {
      scale: [4, 1],
      opacity: [0, 1],
      translateZ: 0,
      easing: "easeOutExpo",
      duration: 950,
      delay: function (t, e) {
        return 70 * e;
      },
    },
    "effect-3": {
      opacity: [0, 1],
      easing: "easeInOutQuad",
      duration: 2250,
      delay: function (t, e) {
        return 150 * (e + 1);
      },
    },
    "effect-4": {
      translateY: ["1.1em", 0],
      translateZ: 0,
      duration: 750,
      delay: function (t, e) {
        return 50 * e;
      },
    },
    "effect-5": {
      translateY: ["1.1em", 0],
      translateX: ["0.55em", 0],
      translateZ: 0,
      rotateZ: [180, 0],
      duration: 750,
      easing: "easeOutExpo",
      delay: function (t, e) {
        return 50 * e;
      },
    },
    "effect-6": {
      scale: [0, 1],
      duration: 1500,
      elasticity: 600,
      delay: function (t, e) {
        return 45 * (e + 1);
      },
    },
    "effect-7": {
      rotateY: [-90, 0],
      duration: 1300,
      delay: function (t, e) {
        return 45 * e;
      },
    },
    "effect-8": {
      translateX: [40, 0],
      translateZ: 0,
      opacity: [0, 1],
      easing: "easeOutExpo",
      duration: 1200,
      delay: function (t, e) {
        return 50 + 30 * e;
      },
    },
    "effect-10": {
      translateY: [100, 0],
      translateZ: 0,
      opacity: [0, 1],
      easing: "easeOutExpo",
      duration: 1400,
      delay: function (t, e) {
        return 50 + 30 * e;
      },
    },
    "effect-9": {
      opacity: [0, 1],
      translateX: [40, 0],
      translateZ: 0,
      scaleX: [0.3, 1],
      easing: "easeOutExpo",
      duration: 800,
      delay: function (t, e) {
        return 150 + 25 * e;
      },
    },
    "effect-11": {
      translateY: [-100, 0],
      easing: "easeOutExpo",
      duration: 1400,
      delay: function (t, e) {
        return 30 * e;
      },
    },
  };
  function d(t) {
    try {
      t = parseInt(t);
    } catch (t) {}
    return t;
  }
  (window.UT_Shortcodes = {
    delay_this: !0,
    start_delay: !1,
    content: "",
    google_maps_loaded: !1,
    isJson: function (t) {
      try {
        JSON.parse(t);
      } catch (t) {
        return !1;
      }
      return !0;
    },
    isHTML: function (t) {},
    init: function (t) {
      void 0 === typeof t ||
        "string" != typeof t ||
        this.isJson(t) ||
        (this.content = t),
        this.init_fitvids(),
        this.init_accordion(),
        this.init_tabs(),
        this.init_revealfx(),
        this.init_progress_circles(),
        this.init_skill_bars(),
        this.init_count_up(),
        this.init_animated_image(),
        this.init_owl_gallery_slider(),
        this.init_owl_testimonials(),
        this.init_brands(),
        this.init_word_rotators(),
        this.init_icon_draw(),
        this.init_parallax_quote(),
        this.init_pie_charts(),
        this.init_appear_effects(),
        this.init_list_animation(),
        this.init_image_gallery(),
        this.init_react_carousel(),
        this.init_portfolio_carousel(),
        this.init_timeline(),
        this.init_social_follow(),
        this.init_twitter_rotator(),
        this.init_comparison_slider(),
        this.init_distortion(),
        this.init_lightbox(),
        this.init_video_lightbox(),
        this.init_morphbox(),
        this.init_yt_background_video(),
        this.init_vimeo_background_video(),
        this.init_google_maps(),
        this.init_glitch(),
        this.init_background_text(),
        this.init_video_grid();
    },
    create_collection: function (e) {
      var a = t([]);
      return (
        e.each(function () {
          a = a.add(t("#" + t(this).attr("id")));
        }),
        a
      );
    },
    init_fitvids: function () {
      t(
        ".ut-video:not(.ut-initialized), .entry-content:not(.ut-initialized), .ut-post-media:not(.ut-initialized), .entry-thumbnail:not(.ut-initialized)"
      ).ut_require_js({
        plugin: "fitVids",
        source: "fitVids",
        callback: function (e) {
          t(e).hasClass("ut-initialized") ||
            e.addClass("ut-initialized").fitVids();
        },
      });
    },
    init_accordion: function () {
      t(".ut-accordion-module")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "accordion",
          source: "accordion",
          callback: function (e) {
            e.each(function (e, a) {
              if (t(a).hasClass("ut-initialized")) return !0;
              t(a)
                .addClass("ut-initialized")
                .find(".ut-accordion-module-item")
                .accordion({
                  transitionSpeed: t(a)
                    .find(".ut-accordion-module-item")
                    .data("transition"),
                  singleOpen: t(a).hasClass("ut-accordion-module-group"),
                  transitionEasing: t(a)
                    .find(".ut-accordion-module-item")
                    .data("easing"),
                });
            });
          },
        });
    },
    init_tabs: function () {
      t(".bklyn-icon-tabs, .ut-accordion, .ut-nav-tabs")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "boostrap",
          source: "boostrap",
          callback: function (e) {
            e.each(function (e, a) {
              if (t(a).hasClass("ut-initialized")) return !0;
            });
          },
        });
    },
    init_revealfx: function () {
      t(".ut-reveal-fx-element")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "RevealFx",
          source: "revealfx",
          callback: function (e) {
            e.each(function (e, a) {
              if (t(a).hasClass("ut-initialized")) return;
              t(a).addClass("ut-initialized");
              let i = new RevealFx(a, {
                isContentHidden: !0,
                revealSettings: {
                  bgcolor: t(a).data("reveal-bgcolor"),
                  direction: t(a).data("reveal-direction"),
                  duration: t(a).data("reveal-duration"),
                  delay: t(a).data("reveal-delay"),
                  onCover: function (e) {
                    (e.style.opacity = 1),
                      t(a).addClass("ut-block-revealed"),
                      o.observe(),
                      void 0 !== window.ut_video_observer &&
                        window.ut_video_observer.observe();
                  },
                },
              });
              t(a).on("inview", function (e, a) {
                if (a) {
                  var n = t(e.target);
                  if (n.hasClass("ut-block-reveal-done")) return;
                  n.parent().removeClass("ut-element-with-block-reveal"),
                    i.reveal();
                }
              });
            });
          },
        }),
        t(".ut-element-revealer-parent").each(function () {
          t(this)
            .imagesLoaded({ background: !0 }, function () {})
            .always(function () {
              t(".ut-element-revealer").on("inview", function (e, a) {
                a &&
                  (t(e.target).addClass("inView"), t(e.target).off("inView"));
              });
            });
        });
    },
    init_progress_circles: function () {
      var e = t(".bkly-progress-circle");
      e.hasClass("ut-initialized") ||
        (e.addClass("ut-initialized"),
        e.on("inview", function (e, a) {
          var i = t(e.target),
            n = i.children(".bkly-progress-svg");
          if (a) {
            var o = n.find(".circle").attr("stroke-dasharray"),
              l = n.parent().data("circle-percent");
            (n.find(".stroke").get(0).style["stroke-dashoffset"] =
              502.4 + (o * l) / 100),
              (n.find(".circle").get(0).style["stroke-dashoffset"] =
                (o * l) / 100);
          } else "no" === n.data("animateonce") ? ((n.find(".stroke").get(0).style["stroke-dashoffset"] = 502.4), (n.find(".circle").get(0).style["stroke-dashoffset"] = 0)) : i.off("inview");
        }));
    },
    init_skill_bars: function () {
      var e = t(".ut-skill-active");
      if (this.content) {
        var a = t(this.content).find(".ut-skill-active");
        a.length && (e = this.create_collection(a));
      }
      e.hasClass("ut-initialized") ||
        (e.addClass("ut-initialized"),
        e.on("inview", function (e, a) {
          var i = t(e.target),
            n = i.data("width");
          a
            ? i.hasClass("ut-skill-progress-thin")
              ? i.addClass("ut-already-visible").width(n + "%")
              : i
                  .addClass("ut-already-visible")
                  .stop(!0, !0)
                  .animate({ width: n + "%" }, i.data("speed"))
            : "no" === i.data("animateonce")
            ? i.css("width", 0)
            : i.off("inview");
        }));
    },
    init_count_up: function () {
      t('.ut-counter[data-type="slot"]')
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "utSlotMachine",
          source: "slot",
          callback: function (e) {
            if (!e.hasClass("ut-initialized")) {
              if ((e.addClass("ut-initialized"), this.content)) {
                var a = t(this.content).find(".ut-counter");
                a.length && (e = this.create_collection(a));
              }
              e.utSlotMachine(),
                e.on("inview", function (e, a) {
                  if (a) {
                    var i = t(e.target);
                    t(
                      "<" +
                        i.data("prefix-tag") +
                        ' class="ut-count-prefix">' +
                        i.data("prefix") +
                        "</" +
                        i.data("prefix-tag") +
                        ">"
                    ).prependTo(i.find(".ut-count")),
                      t(
                        "<" +
                          i.data("suffix-tag") +
                          ' class="ut-count-suffix">' +
                          i.data("suffix") +
                          "</" +
                          i.data("suffix-tag") +
                          ">"
                      ).appendTo(i.find(".ut-count")),
                      t(e.target).off("inview");
                  }
                });
            }
          },
        }),
        t('.ut-counter[data-type="countup"]')
          .not(".ut-initialized")
          .ut_require_js({
            plugin: "CountUp",
            source: "countup",
            callback: function (e) {
              if (!e.hasClass("ut-initialized")) {
                if ((e.addClass("ut-initialized"), this.content)) {
                  var a = t(this.content).find(".ut-counter");
                  a.length && (e = this.create_collection(a));
                }
                e.on("inview", function (e, a) {
                  if (a) {
                    var i = t(e.target),
                      n = {
                        useEasing: !0,
                        useGrouping: !0,
                        separator: i.data("sep-sign"),
                        decimal: ".",
                        decimalPlaces: i.data("decimal-places"),
                        prefix:
                          "<" +
                          i.data("prefix-tag") +
                          ' class="ut-count-prefix">' +
                          i.data("prefix") +
                          "</" +
                          i.data("prefix-tag") +
                          ">",
                        suffix:
                          "<" +
                          i.data("suffix-tag") +
                          ' class="ut-count-suffix">' +
                          i.data("suffix") +
                          "</" +
                          i.data("suffix-tag") +
                          ">",
                      };
                    new CountUp(
                      i.find(".ut-count").attr("id"),
                      0,
                      i.data("counter"),
                      i.data("decimals"),
                      i.data("speed") / 1e3,
                      n
                    ).start(),
                      i.off("inview");
                  }
                });
              }
            },
          });
    },
    init_animated_image: function () {
      t(".ut-animate-image").each(function (e, a) {
        var i = t(a);
        i.hasClass("ut-initialized") ||
          (i.addClass("ut-initialized"),
          i.on("inview", function (e, a) {
            var i = t(e.target),
              n = i.data("effect");
            if (a) {
              if (
                i.hasClass("ut-animation-complete") ||
                i.hasClass("ut-element-is-animating") ||
                !i.hasClass("ut-animate-image-ready")
              )
                return !1;
              i.data("animation-duration") &&
                i.css("animation-duration", i.data("animation-duration")),
                i.data("animation-between") &&
                  i.css("animation-delay", i.data("animation-between")),
                i.delay(i.data("delay")).queue(function () {
                  i.css("opacity", "1").addClass(n).dequeue();
                });
            } else {
              if (
                i.hasClass("ut-animation-complete") ||
                i.hasClass("ut-element-is-animating")
              )
                return;
              "no" === i.data("animateonce")
                ? i.clearQueue().removeClass(n).css("opacity", "0").dequeue()
                : i.hasClass(n) &&
                  (i.addClass("ut-animation-complete"), i.off("inview"));
            }
          }));
      });
    },
    init_owl_gallery_slider: function () {
      t(".ut-owl-gallery-slider, .ut-bkly-qt-rotator > .owl-carousel")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "owlCarousel",
          source: "owl",
          callback: function (a) {
            a.each(function (a, i) {
              if (!t(i).hasClass("ut-initialized")) {
                t(i).addClass("ut-initialized");
                var n = t(i).attr("data-settings");
                if (
                  ((n = n.includes('"')
                    ? JSON.parse(n.replace(/\\/g, ""))
                    : JSON.parse(n)),
                  t(i).owlCarousel(n),
                  (("lightgallery" === site_settings.lg_type &&
                    "no" !== n.lightbox) ||
                    e()) &&
                    t(i).ut_require_js({
                      plugin: "lightGallery",
                      source: "lightGallery",
                      callback: function (t) {
                        t.lightGallery({
                          selector: ".owl-item .for-lightbox",
                          hash: !1,
                          thumbnail: !1,
                          exThumbImage: "data-exthumbimage",
                          getCaptionFromTitleOrAlt: "true",
                          download: d(site_settings.lg_download),
                          mode: site_settings.lg_mode,
                        }),
                          n.autoplay &&
                            (t.on("onAfterOpen.lg", function () {
                              t.trigger("stop.owl.autoplay");
                            }),
                            t.on("onCloseAfter.lg", function () {
                              t.trigger("play.owl.autoplay");
                            }));
                      },
                    }),
                  "morphbox" === site_settings.lg_type && !e())
                ) {
                  var o = t("#ut-morph-box-app");
                  n.autoplay &&
                    (o.on("onAfterOpen.utmorph", function () {
                      t(i).trigger("stop.owl.autoplay");
                    }),
                    o.on("onAfterClose.utmorph", function () {
                      t(i).trigger("play.owl.autoplay");
                    }));
                }
                if (t(i).hasClass("ut-owl-gallery-slider-with-media")) {
                  var l =
                    "morphbox" !== site_settings.lg_type || e()
                      ? ".owl-item .for-lightbox"
                      : ".ut-owl-video-link";
                  t(i).ut_require_js({
                    plugin: "lightGallery",
                    source: "lightGallery",
                    callback: function (t) {
                      t.lightGallery({
                        selector: l,
                        hash: !1,
                        thumbnail: !1,
                        exThumbImage: "data-exthumbimage",
                        getCaptionFromTitleOrAlt: "true",
                        download: d(site_settings.lg_download),
                        mode: site_settings.lg_mode,
                      }),
                        n.autoplay &&
                          (t.on("onAfterOpen.lg", function () {
                            t.trigger("stop.owl.autoplay");
                          }),
                          t.on("onCloseAfter.lg", function () {
                            t.trigger("play.owl.autoplay");
                          }));
                    },
                  });
                }
              }
            });
          },
        });
    },
    init_owl_testimonials: function () {
      t(".ut-bkly-testimonial-rotator > .owl-carousel")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "owlCarousel",
          source: "owl",
          callback: function (e) {
            e.each(function (e, a) {
              if (!t(a).hasClass("ut-initialized")) {
                t(a).addClass("ut-initialized");
                var i = t(a).attr("data-settings");
                ((i = i.includes('"')
                  ? JSON.parse(i.replace(/\\/g, ""))
                  : JSON.parse(i)).onRefresh = function () {
                  t(a).find("div.owl-item").height("");
                }),
                  (i.onRefreshed = function () {
                    t(a).find("div.owl-item").height(t(a).height());
                  }),
                  t(a).owlCarousel(i),
                  t(a).on(
                    "click",
                    ".owl-item.active:not(.center)",
                    function () {
                      t(this).prev().hasClass("center")
                        ? t(a).trigger("next.owl.carousel")
                        : t(a).trigger("prev.owl.carousel");
                    }
                  );
              }
            });
          },
        });
    },
    init_brands: function () {
      t(".ut-brands-carousel")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "flickity",
          source: "flickity",
          callback: function (e) {
            e.each(function (e, a) {
              if (t(a).hasClass("ut-initialized")) return !0;
              t(a).addClass("ut-initialized");
              var i = t(a).data("settings");
              t(a).flickity({
                cellAlign: "left",
                wrapAround: !0,
                groupCells: 1,
                lazyLoad: i.lazyLoad,
                imagesLoaded: !0,
                pageDots: i.pageDots,
                autoPlay: i.autoPlay,
                pauseAutoPlayOnHover: !1,
                prevNextButtons: i.prevNextButtons,
                arrowShape: "",
                on: {
                  ready: function () {
                    i.pageDots &&
                      t(".flickity-page-dots").appendTo(
                        t(a).parent().find(".ut-brands-dots")
                      );
                  },
                },
              }),
                i.autoPlay &&
                  (t(a).flickity("playPlayer"),
                  t(a).on("mouseleave", function () {
                    t(a).flickity("playPlayer");
                  })),
                t(a).imagesLoaded(function () {
                  t(a).flickity("resize");
                });
            });
          },
        });
    },
    decodeHtml: function (t) {
      var e = document.createElement("textarea");
      return (e.innerHTML = t), e.value;
    },
    init_word_rotators: function () {
      t(".ut-word-rotator-classic")
        .not(".ut-initialized")
        .each(function () {
          var e = t(this);
          if (e.hasClass("ut-initialized")) return !0;
          e.addClass("ut-initialized");
          var a = e.attr("data-settings"),
            i = window.ut_rotator_words[e.data("id")],
            n = 0;
          if (
            ((a = a.includes('"')
              ? JSON.parse(a.replace(/\\/g, ""))
              : JSON.parse(a)),
            e.closest("#ut-hero").length &&
              e.closest("#ut-hero").hasClass("ut-hero-imagefader-background"))
          )
            t("ul.ut-image-fader li", "#ut-hero").on(
              "webkitAnimationStart mozAnimationStart MSAnimationStart oanimationstart animationstart",
              function () {
                var o = t(this).index();
                n > 0 &&
                  e.fadeOut(726, function () {
                    var t = i[o].replace(/<(?:.|\n)*?>/gm, "");
                    "off" !== a.glitch
                      ? e
                          .html(
                            '<div class="ut-glitch-on-appear ut-simple-glitch-text-' +
                              a.glitch +
                              '" data-title="' +
                              t +
                              '">' +
                              i[o] +
                              "</div>"
                          )
                          .fadeIn(726)
                      : e
                          .html(
                            '<div data-title="' + t + '">' + i[o] + "</div>"
                          )
                          .fadeIn(726);
                  }),
                  n++;
              }
            ),
              t("ul.ut-image-fader li", "#ut-hero").on(
                "animationiteration",
                function () {
                  var n = t(this).index();
                  e.fadeOut(726, function () {
                    var t = i[n].replace(/<(?:.|\n)*?>/gm, "");
                    "off" !== a.glitch
                      ? e
                          .html(
                            '<div class="ut-glitch-on-appear ut-simple-glitch-text-' +
                              a.glitch +
                              '" data-title="' +
                              t +
                              '">' +
                              i[n] +
                              "</div>"
                          )
                          .fadeIn(726)
                      : e
                          .html(
                            '<div data-title="' + t + '">' + i[n] + "</div>"
                          )
                          .fadeIn(726);
                  });
                }
              );
          else {
            var o = function () {
              setInterval(function () {
                var o = i[(n = (n + 1) % i.length)],
                  l = o.replace(/<(?:.|\n)*?>/gm, "");
                "off" !== a.glitch
                  ? e.fadeOut(a.effect_timer, function () {
                      t(this)
                        .html(
                          '<div class="ut-glitch-on-appear ut-simple-glitch-text-' +
                            a.glitch +
                            '" data-title="' +
                            l +
                            '">' +
                            o +
                            "</div>"
                        )
                        .fadeIn(a.effect_timer);
                    })
                  : e.fadeOut(a.effect_timer, function () {
                      t(this)
                        .html('<div data-title="' + l + '">' + o + "</div>")
                        .fadeIn(a.effect_timer);
                    });
              }, a.timer);
            };
            if (
              "undefined" != typeof preloader_settings &&
              "true" === a.wait_for_preloader
            )
              var l = setInterval(function () {
                preloader_settings.loader_active || (o(), clearInterval(l));
              }, 50);
            else o();
          }
        }),
        t(".ut-word-rotator-typewriter")
          .not(".ut-initialized")
          .ut_require_js({
            plugin: "Typewriter",
            source: "typewriter",
            callback: function (e) {
              e.each(function (e, a) {
                var i = t(a);
                if (i.hasClass("ut-initialized")) return !0;
                i.addClass("ut-initialized");
                var n = i.attr("data-settings"),
                  o = window.ut_rotator_words[i.data("id")],
                  l = 0;
                n = n.includes('"')
                  ? JSON.parse(n.replace(/\\/g, ""))
                  : JSON.parse(n);
                var s = new Typewriter(this, {
                  loop: !0,
                  cursor: n.cursor,
                  wrapperClassName: "ut-typewriter-word",
                  cursorClassName: "ut-typewriter-cursor",
                });
                if (
                  i.closest("#ut-hero").length &&
                  i
                    .closest("#ut-hero")
                    .hasClass("ut-hero-imagefader-background")
                )
                  t("ul.ut-image-fader li", "#ut-hero").on(
                    "webkitAnimationStart mozAnimationStart MSAnimationStart oanimationstart animationstart",
                    function () {
                      var e = t(this).index();
                      if (l > 0) {
                        var a = o[e],
                          s = a.replace(/<(?:.|\n)*?>/gm, "");
                        "off" !== n.glitch
                          ? t(".ut-word-rotator", i).fadeOut(726, function () {
                              t(".ut-word-rotator", i)
                                .html(
                                  '<div class="ut-glitch-on-appear ut-simple-glitch-text-' +
                                    n.glitch +
                                    '" data-title="' +
                                    s +
                                    '">' +
                                    a +
                                    "</div>"
                                )
                                .fadeIn(726);
                            })
                          : t(".ut-word-rotator", i).fadeOut(726, function () {
                              t(".ut-word-rotator", i)
                                .html(
                                  '<div data-title="' + s + '">' + a + "</div>"
                                )
                                .fadeIn(726);
                            });
                      }
                      l++;
                    }
                  ),
                    t("ul.ut-image-fader li", "#ut-hero").on(
                      "animationiteration",
                      function () {
                        var e = t(this).index(),
                          a = o[e],
                          l = a.replace(/<(?:.|\n)*?>/gm, "");
                        "off" !== n.glitch
                          ? t(".ut-word-rotator", i).fadeOut(726, function () {
                              t(".ut-word-rotator", i)
                                .html(
                                  '<div class="ut-glitch-on-appear ut-simple-glitch-text-' +
                                    n.glitch +
                                    '" data-title="' +
                                    l +
                                    '">' +
                                    a +
                                    "</div>"
                                )
                                .fadeIn(726);
                            })
                          : t(".ut-word-rotator", i).fadeOut(726, function () {
                              t(".ut-word-rotator", i)
                                .html(
                                  '<div data-title="' + l + '">' + a + "</div>"
                                )
                                .fadeIn(726);
                            });
                      }
                    );
                else {
                  var r = function () {
                    for (var t = 0; t < o.length; t++)
                      s.typeString(UT_Shortcodes.decodeHtml(o[t]))
                        .callFunction(function () {
                          "off" !== n.glitch &&
                            i.addClass(
                              "ut-glitch-on-appear ut-simple-glitch-text-" +
                                n.glitch
                            );
                        })
                        .pauseFor(2500)
                        .deleteAll()
                        .callFunction(function () {
                          "off" !== n.glitch &&
                            i.removeClass(
                              "ut-glitch-on-appear ut-simple-glitch-text-" +
                                n.glitch
                            );
                        });
                    s.start();
                  };
                  if (
                    "undefined" != typeof preloader_settings &&
                    "true" === n.wait_for_preloader
                  )
                    var u = setInterval(function () {
                      preloader_settings.loader_active ||
                        (r(), clearInterval(u));
                    }, 50);
                  else r();
                }
              });
            },
          }),
        t(".ut-word-rotator-reveal").each(function () {
          var e = t(this);
          if (e.hasClass("ut-initialized")) return !0;
          e.addClass("ut-initialized");
        });
    },
    init_icon_draw: function () {
      t(".ut-vivus-draw")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "Vivus",
          source: "vivus",
          callback: function (e) {
            e.each(function (e, a) {
              var i = t(a);
              if (i.hasClass("ut-initialized")) return !0;
              i.addClass("ut-initialized");
              var n = i.attr("data-settings");
              if (
                "no" ===
                (n = n.includes('"')
                  ? JSON.parse(n.replace(/\\/g, ""))
                  : JSON.parse(n)).draw_svg_icons
              )
                return !0;
              i.data(
                "ut-vivus",
                new Vivus(a, {
                  duration: n.draw_svg_duration,
                  type: n.draw_svg_type,
                  start: "inViewport",
                  onReady: function (t) {
                    t.el.classList
                      ? t.el.classList.add("ut-svg-loaded")
                      : t.el.setAttribute("class", "ut-svg-loaded");
                  },
                })
              ),
                i.data("ut-vivus").stop(),
                i.parent().on("inview", function (e, a) {
                  a &&
                    t(e.target)
                      .dequeue()
                      .delay(i.data("settings").draw_svg_delay)
                      .queue(function () {
                        i.data("ut-vivus").play(), t(e.target).dequeue();
                      });
                });
            });
          },
        });
    },
    init_parallax_quote: function () {
      t(".ut-parallax-quote.ut-reveal-fx")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "RevealFx",
          source: "revealfx",
          callback: function (e) {
            e.each(function (e, a) {
              var i = t(a);
              if (i.hasClass("ut-initialized")) return !0;
              if (
                (i.addClass("ut-initialized"),
                t(".ut-parallax-quote-title", i).prev(".ut-parallax-icon-wrap")
                  .length)
              )
                var n = new RevealFx(
                  t(".ut-parallax-quote-title", i)
                    .prev(".ut-parallax-icon-wrap")
                    .get(0),
                  {
                    revealSettings: {
                      bgcolor: i.data("revealfx-color"),
                      onCover: function (e) {
                        (e.style.opacity = 1),
                          t(e).find(".ut-vivus-draw").length &&
                            (t(e)
                              .find(".ut-vivus-draw")
                              .removeClass("ut-initialized"),
                            UT_Shortcodes.init_icon_draw());
                      },
                    },
                  }
                );
              var o = new RevealFx(t(".ut-parallax-quote-title", i).get(0), {
                revealSettings: {
                  bgcolor: i.data("revealfx-color"),
                  onCover: function (t) {
                    t.style.opacity = 1;
                  },
                },
              });
              if (t(".ut-parallax-quote-name-wrap", i).length)
                var l = new RevealFx(
                  t(".ut-parallax-quote-name-wrap", i).get(0),
                  {
                    revealSettings: {
                      bgcolor: i.data("revealfx-color"),
                      onCover: function (t) {
                        t.style.opacity = 1;
                      },
                    },
                  }
                );
              i.on("inview", function (e, a) {
                if (a) {
                  var i = t(".ut-parallax-quote-title", t(e.target));
                  i.parent().removeClass("ut-element-with-block-reveal"),
                    o.reveal(),
                    t(".ut-parallax-quote-name-wrap", i.next().next("div"))
                      .length &&
                      setTimeout(function () {
                        l.reveal();
                      }, 200),
                    i.prev(".ut-parallax-icon-wrap").length &&
                      setTimeout(function () {
                        n.reveal();
                      }, 200),
                    t(e.target).off("inview");
                }
              });
            });
          },
        });
    },
    init_pie_charts: function () {
      t(".ut-pie-chart")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "Chart",
          source: "pie_chart",
          callback: function (e) {
            e.each(function (e, a) {
              var i = t(a);
              if (i.hasClass("ut-initialized")) return !0;
              i.addClass("ut-initialized");
              var n = a.getContext("2d"),
                o = i.attr("data-settings");
              (o = o.includes('"')
                ? JSON.parse(o.replace(/\\/g, ""))
                : JSON.parse(o)).options.tooltips.callbacks = {
                label: function (t, e) {
                  return e.datasets[0].data[t.index] + " " + e.labels[t.index];
                },
              };
              new Chart(n, o);
            });
          },
        });
    },
    init_appear_effects: function () {
      t("[data-appear-effect]")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "anime",
          source: "anime",
          callback: function (e) {
            e.each(function (e, a) {
              var i = t(a),
                n = i.find("span").attr("class");
              if (i.hasClass("ut-initialized")) return !0;
              i.addClass("ut-initialized"),
                i.on("inview", function (e, a) {
                  if (a) {
                    var o = t(e.target),
                      l = o.data("appear-effect"),
                      s = this;
                    if (
                      (o.find("a").length && (s = o.find("a").get(0)),
                      !o.hasClass("ut-effect-letter-split"))
                    ) {
                      var r = s.textContent.split(" ");
                      s.innerHTML = "";
                      for (var d = 0; d < r.length; d++) {
                        var c = r[d].replace(
                          /\S/g,
                          "<ut-letter class='ut-effect-letter'>$&</ut-letter>"
                        );
                        (s.innerHTML +=
                          '<span class="' + n + '">' + c + "</span>"),
                          d + 1 < r.length && (s.innerHTML += "Â ");
                      }
                      o.addClass("ut-effect-letter-split");
                    }
                    var f = s.querySelectorAll(".ut-effect-letter");
                    (u[l].targets = f),
                      (u[l].begin = function () {
                        o.addClass("ut-effect-letter-animated"),
                          i.off("inview");
                      }),
                      anime.timeline({ loop: !1 }).add(u[l]);
                  }
                });
            });
          },
        });
    },
    init_list_animation: function () {
      t(".bklyn-fancy-list-animated").each(function () {
        var e = t(this);
        e.on("inview", function (a, i) {
          i &&
            (e.find("li").each(function (e) {
              var a = t(this);
              setTimeout(function () {
                a.addClass("appeared");
              }, 150 * e);
            }),
            e.off("inview"));
        });
      }),
        t(".ut-table-menu-animated").each(function () {
          var e = t(this);
          e.on("inview", function (a, i) {
            i &&
              (e.find(".ut-table-menu-top").each(function (e) {
                var a = t(this);
                setTimeout(function () {
                  a.addClass("appeared");
                }, 150 * e);
              }),
              e.off("inview"));
          });
        });
    },
    init_isotope: function (e) {
      let a = {
        itemSelector: ".ut-image-gallery-item-wrap",
        masonry: {
          columnWidth: ".ut-image-gallery-sizer",
          gutter: e.data("mason-gal-gutter"),
        },
      };
      t(window).width() > 767 &&
        t(window).width() <= 1024 &&
        (a.masonry.gutter = e.data("mason-gal-gutter-tablet")),
        t(window).width() <= 767 &&
          (a.masonry.gutter = e.data("mason-gal-gutter-mobile")),
        e.data("isotope")
          ? (t(window).width() >= 1025 &&
              (e.data("isotope").options.masonry.gutter =
                e.data("mason-gal-gutter")),
            t(window).width() > 767 &&
              t(window).width() <= 1024 &&
              (e.data("isotope").options.masonry.gutter = e.data(
                "mason-gal-gutter-tablet"
              )),
            t(window).width() <= 767 &&
              (e.data("isotope").options.masonry.gutter = e.data(
                "mason-gal-gutter-mobile"
              )),
            e.isotope("reloadItems"))
          : e.isotope(a);
    },
    init_image_gallery: function () {
      let e = t(".ut-image-gallery-module");
      "lightgallery" === site_settings.lg_type &&
        e.ut_require_js({
          plugin: "lightGallery",
          source: "lightGallery",
          callback: function (t) {
            t.lightGallery({
              selector: ".ut-vc-images-lightbox-group-image",
              exThumbImage: "data-exthumbimage",
              download: d(site_settings.lg_download),
              mode: site_settings.lg_mode,
              hash: !1,
            });
          },
        }),
        e.each(function (e, a) {
          var i = t(a);
          if (i.hasClass("ut-initialized")) return !0;
          i.data("mason-gal") &&
            i.ut_require_js({
              plugin: "isotope",
              source: "isotope",
              callback: function (e) {
                e.hasClass("ut-isotope-ready") ||
                  (UT_Shortcodes.init_isotope(e),
                  t(window).utresize(function () {
                    UT_Shortcodes.init_isotope(e);
                  }),
                  e.addClass("ut-isotope-ready"));
              },
            });
          var n = i.attr("data-settings");
          if (
            ((n = n.includes('"')
              ? JSON.parse(n.replace(/\\/g, ""))
              : JSON.parse(n)).lazy &&
              (!n.animate || (n.animate && !n.effect)) &&
              (i.data("mason-gal")
                ? (t(".ut-image-gallery-item-wrap", i).appear(),
                  i.on(
                    "appear",
                    ".ut-image-gallery-item-wrap",
                    function (e, a) {
                      var i = t(this);
                      i
                        .children(".ut-image-gallery-item")
                        .hasClass("ut-image-loaded") &&
                        i
                          .delay(100 * (a.index(this) - r(a, "appeared")))
                          .queue(function () {
                            i.children(".ut-image-gallery-item").addClass(
                              "appeared"
                            );
                          });
                    }
                  ))
                : (t(".ut-image-gallery-item", i).appear(),
                  i.on("appear", ".ut-image-gallery-item", function (e, a) {
                    var i = t(this);
                    i.hasClass("ut-image-loaded") &&
                      i
                        .delay(100 * (a.index(this) - r(a, "appeared")))
                        .queue(function () {
                          i.addClass("appeared");
                        });
                  }))),
            n.animate && n.effect)
          ) {
            t(".ut-animate-gallery-element", i).appear();
            var o = !0,
              l = !1;
            i.on("appear", ".ut-animate-gallery-element", function (e, a) {
              if (
                n.global_delay_animation &&
                o &&
                (l ||
                  ((l = !0),
                  setTimeout(function () {
                    (o = !1), t.force_appear();
                  }, n.global_delay_timer)),
                1)
              )
                return !1;
              var i = t(this),
                s = i.data("effect");
              if (n.lazy && !i.hasClass("ut-image-loaded")) return !0;
              i.hasClass("ut-animation-complete") ||
                i.hasClass("ut-element-is-animating") ||
                (i.data("animation-duration") &&
                  i.css("animation-duration", i.data("animation-duration")),
                n.delay_animation
                  ? i
                      .delay(n.delay_timer * (a.index(this) - r(a, s)))
                      .queue(function () {
                        i.css("opacity", "1").addClass(s).dequeue(),
                          i.addClass("appeared");
                      })
                  : i.delay(i.data("delay")).queue(function () {
                      i.css("opacity", "1").addClass(s).dequeue(),
                        i.addClass("appeared");
                    }),
                i.one(
                  "webkitAnimationEnd oanimationend msAnimationEnd animationend",
                  function (t) {
                    i.addClass("ut-animation-done");
                  }
                ));
            }),
              i.on("disappear", ".ut-animate-gallery-element", function () {
                var e = t(this),
                  a = e.data("effect");
                if (n.lazy && !e.hasClass("ut-image-loaded")) return !0;
                e.hasClass("ut-animation-complete") ||
                  e.hasClass("ut-element-is-animating") ||
                  ("no" === e.data("animateonce")
                    ? (e.parent().removeClass("ut-animation-done"),
                      e
                        .clearQueue()
                        .removeClass(a)
                        .css("opacity", "0")
                        .dequeue())
                    : e.hasClass(a) && e.addClass("ut-animation-complete"));
              });
          }
          i.addClass("ut-initialized");
        });
    },
    init_react_carousel: function () {
      t(".ut-react-carousel").ut_require_js({
        plugin: "reactslider",
        source: "reactslider",
        ieblock: !0,
      });
    },
    init_masonry_grid: function () {
      t(".ut-masonry-grid").ut_require_js({
        plugin: "utmasonry",
        source: "masonry",
        callback: function (e) {
          e.each(function (e, a) {
            t(a).utmasonry({
              columns: t(a).data("columns"),
              tcolumns: t(a).data("tcolumns"),
              mcolumns: t(a).data("mcolumns"),
              itemClass: "ut-grid-item",
              unitHeight: t(a).data("column-height"),
            }),
              t(a).addClass("layoutComplete"),
              t.force_appear();
          });
        },
      });
    },
    get_grid_size: function (e) {
      var a = "";
      return (
        (a =
          t(window).width() <= 767
            ? 1
            : t(window).width() >= 767 && t(window).width() <= 1024
            ? 2
            : e.data("columns")),
        e.width() / a
      );
    },
    init_portfolio_carousel: function () {
      t(".ut-portfolio-carousel").ut_require_js({
        plugin: "flexslider",
        source: "flexslider",
        callback: function (e) {
          e.each(function (a, n) {
            if (t(n).hasClass("ut-initialized")) return !0;
            t(n).flexslider({
              animation: "slide",
              controlNav: !1,
              animationLoop: !1,
              slideshow: !1,
              itemWidth: UT_Shortcodes.get_grid_size(t(n)),
              itemMargin: 0,
              touch: !0,
              start: function () {
                t(".ut-lazy-wait", e).each(function (e, a) {
                  t(a).removeClass("ut-lazy-wait"),
                    i() && UT_Adaptive_Images.load_responsive_image(a);
                });
              },
            }),
              t(window).utresize(function () {
                t(n)
                  .removeData("flexslider")
                  .flexslider({
                    animation: "slide",
                    controlNav: !1,
                    animationLoop: !1,
                    slideshow: !1,
                    itemWidth: UT_Shortcodes.get_grid_size(t(n)),
                    itemMargin: 0,
                    touch: !0,
                  });
              }),
              t(n).addClass("ut-initialized");
          });
        },
      });
    },
    init_timeline: function () {
      t(".ut-simple-time-line-wrap")
        .not(".ut-initialized")
        .each(function (e, a) {
          var i = t(a);
          if (i.hasClass("ut-initialized")) return !0;
          i.addClass("ut-initialized");
          var n = i.attr("data-settings");
          if (
            (n = n.includes('"')
              ? JSON.parse(n.replace(/\\/g, ""))
              : JSON.parse(n)).animate
          ) {
            t(
              ".ut-simple-time-line-event-animation, .ut-simple-time-line-event-marker",
              i
            ).appear();
            var o = !0,
              l = !1;
            function s() {
              return (
                !!o &&
                (l ||
                  ((l = !0),
                  setTimeout(function () {
                    (o = !1), t.force_appear();
                  }, n.global_delay_timer)),
                !0)
              );
            }
            i.on(
              "appear",
              ".ut-simple-time-line-event-animation",
              function (e, a) {
                if (n.global_delay_animation && s()) return !0;
                var i = t(this),
                  o = i.data("effect");
                i.hasClass("ut-animation-complete") ||
                  i.hasClass("ut-element-is-animating") ||
                  (i.data("animation-duration") &&
                    i.css("animation-duration", i.data("animation-duration")),
                  n.delay_animation
                    ? i
                        .delay(n.delay_timer * (a.index(this) - r(a, o)))
                        .queue(function () {
                          i.css("opacity", "1").addClass(o).dequeue();
                        })
                    : i.delay(i.data("delay")).queue(function () {
                        i.css("opacity", "1").addClass(o).dequeue();
                      }),
                  i.one(
                    "webkitAnimationEnd oanimationend msAnimationEnd animationend",
                    function (t) {
                      i.addClass("ut-animation-done");
                    }
                  ));
              }
            ),
              "none" !== n.animation_style_marker &&
                i.on(
                  "appear",
                  ".ut-simple-time-line-event-marker",
                  function (e, a) {
                    if (n.global_delay_animation && s()) return !0;
                    var i = t(this),
                      o = i.data("effect");
                    i.hasClass("ut-animation-complete") ||
                      i.hasClass("ut-element-is-animating") ||
                      (i.data("animation-duration") &&
                        i.css(
                          "animation-duration",
                          i.data("animation-duration")
                        ),
                      n.delay_animation
                        ? i
                            .delay(
                              n.delay_timer_marker * (a.index(this) - r(a, o))
                            )
                            .queue(function () {
                              i.css("opacity", "1").addClass(o).dequeue();
                            })
                        : i.delay(i.data("delay")).queue(function () {
                            i.css("opacity", "1").addClass(o).dequeue();
                          }),
                      i.one(
                        "webkitAnimationEnd oanimationend msAnimationEnd animationend",
                        function (t) {
                          i.addClass("ut-animation-done");
                        }
                      ));
                  }
                ),
              i.on(
                "disappear",
                ".ut-simple-time-line-event-animation",
                function () {
                  var e = t(this),
                    a = e.data("effect");
                  e.hasClass("ut-animation-complete") ||
                    e.hasClass("ut-element-is-animating") ||
                    ("no" === e.data("animateonce")
                      ? (e.parent().removeClass("ut-animation-done"),
                        e
                          .clearQueue()
                          .removeClass(a)
                          .css("opacity", "0")
                          .dequeue())
                      : e.hasClass(a) && e.addClass("ut-animation-complete"));
                }
              );
          }
        });
    },
    init_social_follow: function () {
      t(".ut-social-follow-module")
        .not(".ut-initialized")
        .each(function (e, a) {
          var i = t(a);
          if (i.hasClass("ut-initialized")) return !0;
          i.addClass("ut-initialized");
          var n = i.attr("data-settings");
          (n = n.includes('"')
            ? JSON.parse(n.replace(/\\/g, ""))
            : JSON.parse(n)).animate &&
            (t(".ut-animate-social-follow-element", i).appear(),
            i.on(
              "appear",
              ".ut-animate-social-follow-element",
              function (e, a) {
                var i = t(this),
                  o = i.data("effect");
                function l(t) {
                  i.hasClass("ut-animation-complete") ||
                    i.hasClass("ut-element-is-animating") ||
                    (i.data("animation-duration") &&
                      i.css("animation-duration", i.data("animation-duration")),
                    n.delay_animation
                      ? i
                          .delay(n.delay_timer * (a.index(t) - r(a, o)))
                          .queue(function () {
                            i.css("opacity", "1").addClass(o).dequeue();
                          })
                      : i.delay(i.data("delay")).queue(function () {
                          i.css("opacity", "1").addClass(o).dequeue();
                        }),
                    i.one(
                      "webkitAnimationEnd oanimationend msAnimationEnd animationend",
                      function (t) {
                        i.addClass("ut-animation-done");
                      }
                    ));
                }
                n.global_delay_animation
                  ? i.delay(n.global_delay_timer).queue(function () {
                      i.dequeue(), l(this);
                    })
                  : l(this);
              }
            ),
            i.on("disappear", ".ut-animate-social-follow-element", function () {
              var e = t(this),
                a = e.data("effect");
              e.hasClass("ut-animation-complete") ||
                e.hasClass("ut-element-is-animating") ||
                ("no" === e.data("animateonce")
                  ? (e.parent().removeClass("ut-animation-done"),
                    e.clearQueue().removeClass(a).css("opacity", "0").dequeue())
                  : e.hasClass(a) && e.addClass("ut-animation-complete"));
            }));
        });
    },
    init_twitter_rotator: function () {
      t(".ut-twitter-rotator")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "flexslider",
          source: "flexslider",
          callback: function (e) {
            e.each(function (e, a) {
              var i = t(a);
              if (i.hasClass("ut-initialized")) return !0;
              i.addClass("ut-initialized"),
                "on" === i.data("avatar")
                  ? (i
                      .children(":first")
                      .flexslider({
                        animation: "fade",
                        directionNav: !1,
                        controlNav: !1,
                        smoothHeight: !0,
                        animationLoop: !0,
                        slideshow: i.data("autoplay"),
                        slideshowSpeed: i.data("speed"),
                        slideToStart: 0,
                        prevText: "",
                        nextText: "",
                      }),
                    i
                      .children(":first")
                      .next()
                      .flexslider({
                        animation: "slide",
                        directionNav: !0,
                        controlNav: !1,
                        slideshow: i.data("autoplay"),
                        smoothHeight: !0,
                        animationLoop: !0,
                        sync: i.children(":first"),
                        slideshowSpeed: i.data("speed"),
                        slideToStart: 0,
                        prevText: "",
                        nextText: "",
                      }))
                  : i
                      .children(":first")
                      .flexslider({
                        useCSS: !1,
                        animation: "fade",
                        directionNav: !0,
                        controlNav: !1,
                        smoothHeight: !1,
                        animationLoop: !0,
                        slideshow: i.data("autoplay"),
                        slideshowSpeed: i.data("speed"),
                        prevText: "",
                        nextText: "",
                      });
            });
          },
        });
    },
    addParam: function (t, e, a) {
      var i = new RegExp("([?&])" + e + "=.*?(&|$)", "i"),
        n = -1 !== t.indexOf("?") ? "&" : "?";
      return t.match(i)
        ? t.replace(i, "$1" + e + "=" + a + "$2")
        : t + n + e + "=" + a;
    },
    init_google_map: function (e) {
      var a = t(e).attr("data-settings");
      a = a.includes('"') ? JSON.parse(a.replace(/\\/g, "")) : JSON.parse(a);
      var i = new google.maps.Map(e, a);
      new google.maps.Geocoder().geocode(
        { address: t(e).data("address") },
        function (n, o) {
          o === google.maps.GeocoderStatus.OK &&
            (new google.maps.Marker({
              position: n[0].geometry.location,
              icon: a.marker,
              map: i,
            }),
            i.setCenter(n[0].geometry.location),
            t(e).addClass("ut-initialized"));
        }
      );
    },
    init_google_maps: function () {
      var e = t(".ut-advanced-google-map"),
        a = this;
      e.length &&
        (this.google_maps_loaded
          ? this.google_maps_loaded &&
            e.not(".ut-initialized").each(function (t, e) {
              UT_Shortcodes.init_google_map(e);
            })
          : t.getScript(e.data("api")).done(function () {
              e.each(function (t, e) {
                UT_Shortcodes.init_google_map(e);
              }),
                (a.google_maps_loaded = !0);
            }));
    },
    init_comparison_slider: function () {
      t(".ut-comparison-container")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "comparison",
          source: "comparison",
          callback: function (e) {
            e.each(function () {
              var e = t(this);
              if (e.hasClass("ut-initialized")) return !0;
              e.addClass("ut-initialized"),
                e.utcomparison({
                  default_offset_pct: e.data("default-offset-pct"),
                  orientation: e.data("orientation"),
                  before_label: e.data("before-label"),
                  after_label: e.data("after-label"),
                  no_overlay: !1,
                  move_with_handle_only: !0,
                  move_slider_on_hover: e.data("move-slider-on-hover"),
                  click_to_move: !0,
                });
            });
          },
        });
    },
    init_distortion: function () {
      t(".ut-distortion-effect-container")
        .not(".ut-initialized")
        .ut_require_js({
          plugin: "hoverEffect",
          source: "distortion",
          callback: function (e) {
            e.each(function (e, a) {
              var i = t(a);
              if (i.hasClass("ut-initialized")) return !0;
              i.addClass("ut-initialized");
              var n = Array.from(a.querySelectorAll("img"));
              lozad(a, {
                rootMargin: "100%",
                loaded: function (t) {
                  new hoverEffect({
                    parent: t,
                    intensity: t.dataset.intensity || void 0,
                    speedIn: t.dataset.speedin || void 0,
                    speedOut: t.dataset.speedout || void 0,
                    easing: t.dataset.easing || void 0,
                    hover: t.dataset.hover || void 0,
                    image1: n[0].getAttribute("data-src"),
                    image1_w: n[0].getAttribute("width"),
                    image1_h: n[0].getAttribute("height"),
                    image2: n[1].getAttribute("data-src"),
                    image2_w: n[1].getAttribute("width"),
                    image2_h: n[1].getAttribute("height"),
                    displacementImage: t.dataset.displacement,
                  });
                },
              }).observe();
            });
          },
        });
    },
    init_lightbox: function () {
      "undefined" !== site_settings &&
        "lightgallery" === site_settings.lg_type &&
        (t(".ut-vc-images-lightbox").ut_require_js({
          plugin: "lightGallery",
          source: "lightGallery",
          callback: function (e) {
            e.each(function () {
              t(this).removeClass("ut-wait-for-plugin");
            }),
              t("#ut-custom-contact-section, #ut-custom-hero").lightGallery({
                selector: ".ut-vc-images-lightbox",
                exThumbImage: "data-exthumbimage",
                download: d(site_settings.lg_download),
                getCaptionFromTitleOrAlt: "true",
                mode: site_settings.lg_mode,
                hash: !1,
              }),
              t(".entry-content").each(function () {
                t(this).data("lightGallery") &&
                  t(this).data("lightGallery").destroy(!0),
                  t(this).lightGallery({
                    selector:
                      ".ut-vc-images-lightbox:not(.ut-vc-images-lightbox-group-image)",
                    exThumbImage: "data-exthumbimage",
                    download: d(site_settings.lg_download),
                    getCaptionFromTitleOrAlt: "true",
                    mode: site_settings.lg_mode,
                    hash: !1,
                  });
              });
          },
        }),
        t(".ut-wp-gallery-lightbox-on").ut_require_js({
          plugin: "lightGallery",
          source: "lightGallery",
          callback: function (e) {
            e.each(function () {
              t(this).lightGallery({
                selector: ".gallery-item a",
                exThumbImage: "data-exthumbimage",
                hash: !1,
                download: d(site_settings.lg_download),
                mode: site_settings.lg_mode,
              });
            });
          },
        })),
        t(".ut-wp-gallery-lightbox-off").each(function () {
          t(this).find("a").addClass("ut-deactivated-link");
        }),
        t(".gallery:not(.ut-wp-gallery-lightbox)").ut_require_js({
          plugin: "lightGallery",
          source: "lightGallery",
          callback: function (e) {
            e.each(function () {
              t(".gallery-item a", t(this)).each(function () {
                t(this).attr(
                  "data-sub-html",
                  "#" + t(this).closest(".gallery-icon").next().attr("id")
                ),
                  t(this).data(
                    "sub-html",
                    "#" + t(this).closest(".gallery-icon").next().attr("id")
                  );
              }),
                t(this).lightGallery({
                  selector: ".gallery-item a",
                  hash: !1,
                  download: d(site_settings.lg_download),
                  mode: site_settings.lg_mode,
                });
            });
          },
        });
    },
    init_video_lightbox: function () {
      t('.ut-load-video[data-location="lightbox"]').ut_require_js({
        plugin: "lightGallery",
        source: "lightGallery",
        callback: function (e) {
          e.each(function () {
            if (t(this).data("html5-video")) {
              t(this).removeAttr("href");
              var e = {
                selector: ".ut-load-video",
                autoplayFirstVideo: !0,
                controls: !1,
                download: !1,
                zoom: !1,
                hash: !1,
              };
            } else {
              t(this).attr("href", t(this).data("video"));
              e = {
                selector: ".ut-load-video",
                youtubePlayerParams: { autoplay: 1 },
                vimeoPlayerParams: { autoplay: 1 },
                controls: !1,
                download: !1,
                rotate: !1,
                zoom: !1,
                hash: !1,
              };
            }
            void 0 === t(this).data("lg-id") &&
              t(this).parent().lightGallery(e);
          });
        },
      });
    },
    init_morphbox: function () {
      "undefined" !== site_settings &&
        "morphbox" === site_settings.lg_type &&
        t("a[data-exthumbimage]").ut_require_js({
          plugin: "morphbox_base",
          source: "morphbox_base",
          callback: function (e) {
            t(e).ut_require_js({
              plugin: "UT_Morph_Box_APP",
              source: "morphbox",
              callback: function (e) {
                e.each(function () {
                  t(this).removeClass("ut-wait-for-plugin");
                }),
                  UT_Morph_Box_APP.init();
              },
            });
          },
        });
    },
    init_yt_background_video: function () {
      t('.ut-video-section-player[data-source="youtube"]').ut_require_js({
        plugin: "YTPlayer",
        source: "ytplayer",
        callback: function (e) {
          e.YTPlayer(),
            t("#ut-video-control-" + e.data("id")).click(function (a) {
              a.preventDefault(),
                t(this).hasClass("ut-unmute")
                  ? (t(this).removeClass("ut-unmute").addClass("ut-mute"),
                    e.YTPUnmute())
                  : (t(this).removeClass("ut-mute").addClass("ut-unmute"),
                    e.YTPMute());
            }),
            t("#ut-background-video-" + e.data("id")).on(
              "YTPReady",
              function () {
                t("#ut-background-video-" + e.data("id"))
                  .siblings(".parallax-scroll-container")
                  .addClass("parallax-scroll-container-hide");
              }
            );
        },
      });
    },
    init_vimeo_background_video: function () {
      t('.ut-video-section-player[data-source="vimeo"]').ut_require_js({
        plugin: "vimelar",
        source: "vimeo",
        callback: function (e) {
          e.each(function () {
            var e = t(this);
            e.vimelar(e.data("settings"));
            var a = document.querySelector("#vimelar-player-" + e.data("id")),
              i = new Vimeo.Player(a);
            i.on("loaded", function () {
              i.play(),
                t("#vimelar-container-" + e.data("id"))
                  .delay(2e3)
                  .queue(function () {
                    t(this).addClass("ut-vimeo-loaded"),
                      t("#ut-video-hero-control")
                        .parent()
                        .addClass("ut-audio-control-visible"),
                      t(window).trigger("resize");
                  });
            }),
              i.on("ended", function () {
                t("#vimelar-container-" + e.data("id")).removeClass(
                  "ut-vimeo-loaded"
                ),
                  t("#ut-video-hero-control").fadeOut();
              }),
              t("#ut-video-hero-control.vimeo").click(function (a) {
                t(this).hasClass("ut-unmute")
                  ? (t(this).removeClass("ut-unmute").addClass("ut-mute"),
                    i.setVolume(e.data("max-volume")))
                  : (t(this).removeClass("ut-mute").addClass("ut-unmute"),
                    i.setVolume(0)),
                  a.preventDefault();
              });
          });
        },
      });
    },
    init_glitch: function () {
      t(
        ".ut-element-glitch-wrap:not(.ut-oberserver-initialized), .ut-simple-glitch-text-permanent:not(.ut-oberserver-initialized)"
      ).each(function () {
        var e = t(this);
        if (e.hasClass("ut-oberserver-initialized")) return !0;
        e.addClass("ut-oberserver-initialized").on("inview", n);
      }),
        t(".ut-simple-glitch-text-hover").each(function () {
          var e = t(this);
          if (
            e.hasClass("bklyn-btn") ||
            e.parent().hasClass("ut-simple-glitch-text-hover-parent")
          )
            return !0;
          e.parent().addClass("ut-simple-glitch-text-hover-parent");
        });
    },
    init_background_text: function () {
      t(".bklyn-background-text-animated").each(function () {
        let e = t(this);
        if (e.hasClass("ut-observer-initialized")) return !0;
        e.addClass("ut-observer-initialized").on("inview", function (a, i) {
          i
            ? t(a.target).removeClass("outView").addClass("inView")
            : "infinite" === e.data("animate") &&
              t(a.target).removeClass("inView").addClass("outView");
        });
      });
    },
    init_video_grid: function () {
      t(".bklyn-video-grid-wrap").each(function () {
        let e = this,
          a = t(".bklyn-video-grid-player", this);
        a.ut_require_js({
          plugin: "YTPlayer",
          source: "ytplayer",
          callback: function () {
            a.YTPlayer(a.data("property"));
          },
        }),
          t(".ut-video-grid-video", this).each(function () {
            t(this).data("background-poster-image");
          }),
          a.on("YTPReady", function () {
            a.data("filters") && a.YTPApplyFilters(a.data("filters"));
          });
        let i = "click";
        "hover" === t(this).data("playEvent") && (i = "mouseenter"),
          t(document).on(i, ".ut-video-grid-video", function (e) {
            if ((e.preventDefault(), this.classList.contains("is-playing")))
              return !1;
            t(".ut-video-grid-video").not(this).removeClass("is-playing"),
              this.classList.add("is-playing"),
              a.YTPChangeMovie(t(this).data("property"));
          }),
          "click" === i &&
            t(e).on("click", ".ut-video-grid-video", function (t) {
              t.preventDefault();
            });
      });
    },
  }),
    t(document).ready(function () {
      UT_Shortcodes.init();
    }),
    t(window).on("load", function () {
      t(document).ready(function () {
        UT_Shortcodes.init_masonry_grid();
      });
    }),
    t(window).on("load", function () {
      i() &&
        setInterval(function () {
          o.observe(), l.observe(), s.observe(), UT_Shortcodes.init();
        }, 2e3);
    }),
    t(document).ajaxComplete(function () {
      t(window).scroll(),
        o.observe(),
        l.observe(),
        s.observe(),
        "function" == typeof window.vc_waypoints && window.vc_waypoints(),
        i() && UT_Shortcodes.init(),
        t(".ut-animate-element:not(.ut-appear-initialized)")
          .appear()
          .addClass("ut-appear-initialized");
    }),
    t(window).on("load", function () {
      t(document).on(
        "click",
        ".ut-load-video[data-location=inline]",
        function (e) {
          var i = t(this),
            n = i.data("video"),
            o = a(),
            l = i.parent(".ut-video-module-caption"),
            s = l.next(".ut-video-module-loading");
          l.find(".ut-video-module-caption-text").fadeOut(),
            s.fadeIn(),
            (function (e, a, i, n) {
              if (e) {
                var o = utShortcode.ajaxurl,
                  l = t('<div id="ut-video' + a + '"></div>'),
                  s = i.find(".ut-video-module-caption-text");
                t.ajax({
                  type: "POST",
                  url: o,
                  data: { action: "ut_get_video_player", video: e },
                  success: function (t) {
                    return (
                      l.html(t).ut_require_js({
                        plugin: "fitVids",
                        source: "fitVids",
                        callback: function (t) {
                          t.fitVids();
                        },
                      }),
                      i.html(l.append(s)),
                      !1
                    );
                  },
                  complete: function () {
                    n && "function" == typeof n && n();
                  },
                });
              }
            })(n, o, l, function () {
              s.fadeOut();
            }),
            e.preventDefault();
        }
      ),
        t(document).on(
          "click",
          '.ut-video-caption .ut-load-video[data-location="inline"]',
          function (e) {
            var i = t(this).data("video"),
              n = a(),
              o = t(this).parent(".ut-video-caption"),
              l = o.next(".ut-video-loading");
            o.find(".ut-video-caption-text").fadeOut(),
              l.fadeIn(),
              (function (e, a, i, n) {
                if (e) {
                  var o = utShortcode.ajaxurl,
                    l = t('<div id="ut-video' + a + '"></div>'),
                    s = i.find(".ut-video-caption-text");
                  t.ajax({
                    type: "POST",
                    url: o,
                    data: { action: "ut_get_video_player", video: e },
                    success: function (t) {
                      return (
                        l.html(t).ut_require_js({
                          plugin: "fitVids",
                          source: "fitVids",
                          callback: function (t) {
                            t.fitVids();
                          },
                        }),
                        i.html(l.append(s)),
                        !1
                      );
                    },
                    complete: function () {
                      n && "function" == typeof n && n();
                    },
                  });
                }
              })(i, n, o, function () {
                l.fadeOut();
              }),
              e.preventDefault();
          }
        ),
        t(document.body)
          .on("mouseenter", ".ut-simple-glitch-text-hover", function () {
            var e = t(this);
            e.hasClass("bklyn-btn") &&
              (e.parent().addClass("ut-simple-glitch-text-hover-parent"),
              e.data("effect") && e.removeClass(e.data("effect")));
          })
          .on("mouseleave", ".ut-simple-glitch-text-hover-parent", function () {
            var e = t(this);
            e.find(".bklyn-btn").length &&
              e.removeClass("ut-simple-glitch-text-hover-parent");
          }),
        t(".ut-animate-element").appear().addClass("ut-appear-initialized"),
        t(document.body).on(
          "webkitAnimationStart mozAnimationStart MSAnimationStart oanimationstart animationstart",
          ".ut-animate-element, .ut-animate-image",
          function () {
            var e = t(this),
              a = e.data("effect");
            e.hasClass(a) && e.addClass("ut-element-is-animating");
          }
        ),
        t(document.body).on(
          "webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",
          ".ut-animate-element, .ut-animate-image",
          function () {
            var e = t(this),
              a = e.data("effect");
            e.hasClass(a) &&
              (e.removeClass("ut-element-is-animating"),
              e.data("animation-between") &&
                e
                  .removeClass(a)
                  .delay(1e3 * e.data("animation-between"))
                  .queue(function () {
                    e.addClass(a).dequeue();
                  }),
              "no" !== e.data("animateonce") ||
                e.isOnScreen() ||
                e.clearQueue().removeClass(a).css("opacity", "0").dequeue());
          }
        ),
        t(document.body).on(
          "webkitAnimationStart mozAnimationStart MSAnimationStart oanimationstart animationstart",
          ".ut-animate-gallery-element",
          function () {
            var e = t(this);
            e.hasClass(e.data("effect")) &&
              e.addClass("ut-element-is-animating");
          }
        ),
        t(document.body).on(
          "webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",
          ".ut-animate-gallery-element",
          function () {
            var e = t(this),
              a = e.data("effect");
            e.hasClass(a) &&
              (e.removeClass("ut-element-is-animating"),
              e.data("animation-between") &&
                e
                  .removeClass(a)
                  .delay(e.data("animation-between"))
                  .queue(function () {
                    e.addClass(a).dequeue();
                  }),
              "no" !== e.data("animateonce") ||
                e.isOnScreen() ||
                e.clearQueue().removeClass(a).css("opacity", "0").dequeue());
          }
        ),
        t(document.body).on("appear", ".ut-animate-element", function () {
          var e = t(this),
            a = e.data("effect");
          e.hasClass("ut-animation-complete") ||
            e.hasClass("ut-element-is-animating") ||
            (e.data("animation-duration") &&
              e.css("animation-duration", e.data("animation-duration")),
            e.delay(e.data("delay")).queue(function () {
              -1 !== a.indexOf("fade")
                ? e.addClass(a)
                : e.css("opacity", "1").addClass(a);
            }));
        }),
        t(document.body).on("disappear", ".ut-animate-element", function () {
          var e = t(this),
            a = e.data("effect");
          e.hasClass("ut-animation-complete") ||
            e.hasClass("ut-element-is-animating") ||
            ("no" === e.data("animateonce")
              ? e.clearQueue().removeClass(a).css("opacity", "0").dequeue()
              : e.hasClass(a) && e.addClass("ut-animation-complete"));
        }),
        t(".bklyn-fancy-divider-animated").on("inview", function (e, a) {
          if (a) {
            var i = t(this);
            setTimeout(function () {
              i.removeClass("bklyn-fancy-divider-animated");
            }, i.data("animated-delay"));
          }
        }),
        t("[data-ut-auto-remove-wait]")
          .parent()
          .on("inview", function (e, a) {
            if (a) {
              var i = t(this);
              i.delay(
                i.find(".ut-animate-brand-logos").data("ut-auto-remove-wait")
              ).queue(function () {
                i.find(".ut-animate-brand-logos")
                  .data("ut-wait", 0)
                  .attr("data-ut-wait", 0)
                  .trigger("inview");
              });
            }
          }),
        t(".ut-animate-brand-logos").on("inview", function (e, a) {
          if (a) {
            var i = t(this),
              n = i.data("effect");
            i.find(".ut-single-brand").each(function (e) {
              var a = t(this).find("img");
              a.delay(i.data("delay") * e).queue(function () {
                a.css("opacity", "1").addClass(n);
              });
            });
          }
        }),
        t(document.body).on(
          "webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",
          ".ut-single-brand img.animated",
          function () {
            t(this).attr("class", "").attr("style", "");
          }
        ),
        t(document).ajaxComplete(function () {
          t(".ut-animate-element:not(.ut-appear-initialized)")
            .appear()
            .addClass("ut-appear-initialized");
        });
    });
  var c = !0;
  function f(t) {
    setTimeout(function () {
      c = !0;
    }, t);
  }
  if (
    (t(document).on(
      "click",
      ".ut-next-gallery-slide:not(.ut-single-slider-control)",
      function (e) {
        (e.stopImmediatePropagation(), e.preventDefault(), c) &&
          (t("#" + t(this).data("for")).trigger("next.owl.carousel"),
          (c = !1),
          f(200));
      }
    ),
    t(document).on(
      "click",
      ".ut-prev-gallery-slide:not(.ut-single-slider-control)",
      function (e) {
        (e.stopImmediatePropagation(), e.preventDefault(), c) &&
          (t("#" + t(this).data("for")).trigger("prev.owl.carousel"),
          (c = !1),
          f(200));
      }
    ),
    t(document).on(
      "click",
      ".ut-next-gallery-slide.ut-single-slider-control",
      function (e) {
        (e.stopImmediatePropagation(), e.preventDefault(), c) &&
          (t("#" + t(this).data("for")).trigger("next.owl.carousel"),
          (c = !1),
          f(200));
      }
    ),
    t(document).on(
      "click",
      ".ut-prev-gallery-slide.ut-single-slider-control",
      function (e) {
        (e.stopImmediatePropagation(), e.preventDefault(), c) &&
          (t("#" + t(this).data("for")).trigger("prev.owl.carousel"),
          (c = !1),
          f(200));
      }
    ),
    t("ut-typewriter-1, ut-typewriter-2").ut_require_js({
      plugin: "Typewriter",
      source: "typewriter",
      callback: function (e) {
        e.each(function () {
          var e = t(this),
            a = e.is("ut-typewriter-1") ? "|" : "_",
            i = e.text().split(",");
          e.attr("current", 1);
          var n = new Typewriter(this, {
            loop: !0,
            cursor: a,
            wrapperClassName: "ut-typewriter-word",
            cursorClassName: "ut-typewriter-cursor",
          });
          e.addClass("ut-typewriter-ready");
          var o = function () {
            for (var t = 0; t < i.length; t++)
              n.typeString(i[t])
                .callFunction(function () {
                  e.addClass(e.data("ut-glitch-class"));
                })
                .pauseFor(2500)
                .deleteAll()
                .callFunction(function () {
                  parseInt(e.attr("current")) === i.length
                    ? e.attr("current", 1)
                    : e.attr("current", parseInt(e.attr("current")) + 1),
                    e.closest(".ut-glitch").length &&
                      e
                        .closest(".ut-glitch")
                        .attr(
                          "data-title",
                          i[parseInt(e.attr("current")) - 1] + a
                        ),
                    e.removeClass(e.data("ut-glitch-class"));
                });
            n.start();
          };
          if ("undefined" != typeof preloader_settings) {
            let t = setInterval(function () {
              preloader_settings.loader_active || (o(), clearInterval(t));
            }, 50);
          } else o();
        });
      },
    }),
    t(".ut-glitch-on-appear").on("inview", function (e, a) {
      a
        ? t(e.target).addClass(t(e.target).data("ut-glitch-class"))
        : t(e.target).removeClass(t(e.target).data("ut-glitch-class"));
    }),
    t(document.body).on(
      "webkitAnimationStart mozAnimationStart MSAnimationStart oanimationstart animationstart",
      ".ut-element-revealer",
      function () {
        let e = t(this);
        e.parent().addClass("ut-element-is-revealing");
        let a = 1170;
        e.hasClass("ut-element-revealer-slow") && (a = 1820),
          e.hasClass("ut-element-revealer-fast") && (a = 650),
          e.delay(a).queue(function () {
            e.parent().addClass("ut-element-revealer-covered");
          });
      }
    ),
    t(document.body).on(
      "webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",
      ".ut-element-revealer",
      function () {
        t(this).dequeue().parent().addClass("ut-element-revealer-ready"),
          t.force_appear();
      }
    ),
    t(document).on(
      "click",
      ".ut-deactivated-link, .ut-deactivated-link a",
      function (t) {
        t.preventDefault();
      }
    ),
    t("body").hasClass("ut-blog-has-animation"))
  ) {
    var m = t("article"),
      g = t("#secondary");
    m.appear(),
      g.appear(),
      m.each(function (e) {
        t(this).css("z-index", t("article").length + e);
      }),
      t(document.body).on("appear", "article", function () {
        t(this).hasClass("BrooklynFadeInUp") ||
          t(this)
            .delay(150 * t(this).index())
            .queue(function () {
              t(this).addClass("BrooklynFadeInUp");
            });
      }),
      t(document.body).on("appear", "#secondary", function () {
        t(this).hasClass("BrooklynFadeInUp") ||
          t(this).addClass("BrooklynFadeInUp");
      });
  }
  t(window).on("load", function () {
    t.force_appear(), t("#ut-header-search").addClass("ut-header-search-ready");
  });
})(jQuery);
